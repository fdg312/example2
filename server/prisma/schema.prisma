// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @default(autoincrement()) @id
  createdAt  DateTime @default(now()) @map("created_at")

  email      String   @unique
  phone      String   @unique
  password   String
  name       String

  avatarPath        String?
  verificationCode  Int?

  favourites    Favourite[]
  adds          Add[]
  chats         Chat[]
  messages      Message[]
}

model Add {
  id         Int      @default(autoincrement()) @id
  createdAt  DateTime @default(now()) @map("created_at")

  images    String[]
  phone     String
  title     String
  slug      String @unique
  text      String
  address   String
  city      String
  price     Int

  favourites Favourite[]  

  user    User @relation(fields: [userId], references: [id])
  userId  Int

  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int

  subcategory    Subcategory @relation(fields: [subcategoryId], references: [id])
  subcategoryId  Int
}

model Category {
  id         Int      @default(autoincrement()) @id
  createdAt  DateTime @default(now()) @map("created_at")

  name  String @unique
  slug  String @unique

  adds           Add[]
  subcategories  Subcategory[]
}

model Subcategory {
  id         Int      @default(autoincrement()) @id
  createdAt  DateTime @default(now()) @map("created_at")

  name  String @unique
  slug  String @unique

  adds  Add[]

  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  Int
}

model Chat {
  id         Int      @default(autoincrement()) @id
  createdAt  DateTime @default(now()) @map("created_at")

  messages  Message[]
  users    User[]
}

model Message {
  id         Int      @default(autoincrement()) @id
  createdAt  DateTime @default(now()) @map("created_at")

  text String

  sender    User @relation(fields: [senderId], references: [id], onDelete: Cascade)
  senderId  Int

  chat    Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId  Int
}

model Favourite {
  id         Int      @default(autoincrement()) @id
  createdAt  DateTime @default(now()) @map("created_at")

  add    Add @relation(fields: [addId], references: [id], onDelete: Cascade)
  addId  Int

  user    User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int
}